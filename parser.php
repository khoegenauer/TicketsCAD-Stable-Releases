<?php
	error_reporting(E_ALL);				// 2/3/09 
	$version = "2.10 D beta";			// 
	$filename = './incs/mysql_test.inc.php';

	function dump($variable) {
		echo "\n<PRE>";				// pretty it a bit
		var_dump($variable) ;
		echo "</PRE>\n";
		}
	

	function get_variable($which){								/* get variable from db settings table, returns FALSE if absent  */
		global $variables;
		if (empty($variables)) {
			$result = mysql_query("SELECT * FROM `$GLOBALS[mysql_prefix]settings`") or do_error("get_variable(n:$name)::mysql_query()", 'mysql query failed', mysql_error(), basename( __FILE__), __LINE__);
			if (!(mysql_affected_rows ($result) == 1)) { return FALSE;}
			$row = stripslashes_deep(mysql_fetch_assoc($result));
			return $row['value'];
			}
		}		// end function
	
//	function read_setting($name) {
//		$tablename = prefix("settings");
//		$query = "SELECT * FROM `$tablename` WHERE `name` = $name  LIMIT 1;
//		$result = mysql_query($query) or die( __FUNCTION__ __LINE__ . "failed, execution halted");
//		if 
//		$row =  stripslashes(mysql_fetch_assoc($result));
//		return $row['value'];
//		}
	
	function table_exists($name,$drop_tables) {			//check if mysql table exists, if it's a re-install
		$query 		= "SELECT COUNT(*) FROM $name";
		dump($query);
       	$result 	= mysql_query($query);
		$num_rows 	= @mysql_num_rows($result);

		if($num_rows) {
			if($drop_tables) {
				mysql_query("DROP TABLE $name");
				print "<LI> Dropped table '<B>$name</B>'<BR />";
				}
			else {
				print "<FONT CLASS=\"warn\">Table '$name' already exists, use Re-install option instead. Click back in your browser.</FONT></BODY></HTML>";
				exit();
				}
			}
		}

	function prefix ($tbl) {		/* returns concatenated string */
		global $db_prefix;
		return  $db_prefix . $tbl;
		}

	function do_tracks_hh () {	
		$table_name = prefix("tracks_hh");
		$query = "CREATE TABLE `$table_name` (
		  `id` bigint(7) NOT NULL auto_increment,
		  `source` varchar(96) default NULL,
		  `latitude` double default NULL,
		  `longitude` double default NULL,
		  `speed` int(8) default NULL,
		  `course` int(8) default NULL,
		  `altitude` int(8) default NULL,
		  `status` varchar(96) default NULL,
		  `updated` datetime NOT NULL,
		  `from` varchar(16) NOT NULL COMMENT 'ip addr',
		  PRIMARY KEY  (`id`)
		) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;";
	
		mysql_query($query) or die("CREATE TABLE failed, execution halted at line ". __LINE__);
		}				// end function do_tracks_hh ()
			
	function do_session() {
		$table_name = prefix("session");
		$query = "CREATE TABLE `$table_name` (

		  `id` bigint(4) NOT NULL auto_increment,
		  `sess_id` varchar(40) default NULL,
		  `user_name` varchar(40) default NULL,
		  `user_id` int(4) default NULL,
		  `level` int(2) default NULL,
		  `ticket_per_page` varchar(16) default NULL,
		  `sortorder` varchar(16) default NULL,
		  `scr_width` varchar(16) default NULL,
		  `scr_height` varchar(16) default NULL,
		  `browser` varchar(100) default NULL,
		  `f1` varchar(1) NOT NULL default ' ' COMMENT 'flag 1',
		  `f2` varchar(1) NOT NULL default ' ' COMMENT 'flag 2',
		  `f3` varchar(1) NOT NULL default ' ' COMMENT 'flag 3',
		  `f4` varchar(1) NOT NULL default ' ' COMMENT 'flag 4',
		  `p1` varchar(48) default NULL COMMENT 'param 1',
		  `p2` varchar(48) default NULL COMMENT 'param 2',
		  `p3` varchar(48) default NULL COMMENT 'param 3',
		  `p4` varchar(48) default NULL COMMENT 'param 4',
		  `last_in` bigint(20) default NULL,
		  PRIMARY KEY  (`id`),
		  UNIQUE KEY `ID` (`id`)
		) ENGINE=MyISAM  DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;";

		mysql_query($query) or die("CREATE TABLE failed, execution halted at line ". __LINE__);	
		}


	function create_tables($db_prefix,$drop_tables=1) {		//check if tables exists and if drop_tables is 1
		table_exists($db_prefix."session",$drop_tables);
		table_exists($db_prefix."tracks_hh",$drop_tables);

		print "<LI> Created tables " . substr($tables, 0, -2) . "<BR />";
		}

	function write_conf($host,$db,$user,$password,$prefix) {
		if (!$fp = fopen('./incs/mysql.inc.php', 'a'))
        	print '<LI> <FONT CLASS="warn">Cannot open mysql.inc.php for writing</FONT>';
		else {
			ftruncate($fp,0);
			fwrite($fp, "<?php\n");
			fwrite($fp, "	/* generated by '" . basename( __FILE__) . "' " . date('r') . " */\n");
			fwrite($fp, '	$mysql_host 	= '."'$host';\n");
			fwrite($fp, '	$mysql_db 		= '."'$db';\n");
			fwrite($fp, '	$mysql_user 	= '."'$user';\n");
			fwrite($fp, '	$mysql_passwd 	= '."'$password';\n");
			fwrite($fp, '	$mysql_prefix 	= '."'$prefix';\n");
			fwrite($fp, '?>');
			}

		fclose($fp);
		print '<LI> Wrote configuration to \'<B>./incs/mysql.inc.php</B>\'';
		}


	$version = "2.10 D beta";			// 
	$filename = './incs/mysql.inc.php';
	
	if (file_exists($filename)) {
//	    echo "The file $filename exists\n\n";
		} 
	else {
//	    echo "The file $filename does not exist\n\n";
		die("Failed! MySQL.inc file missing from inc subdirectory." . __LINE__ . "\n");
		}
	if (is_readable ($filename)) {
//	    echo "The file $filename is readable\n\n";
		} 
	else {
//	    echo "The file $filename is NOT readable\n\n";
		die("Failed! No READ permissions on MySQL.inc file." . __LINE__ . "\n");
		}

	$mysql_host = $mysql_db = $mysql_user = $mysql_passwd = $mysql_prefix = "";

	$searches = array("'", ";");

	if (file_exists($filename)) {
	    echo "The file $filename exists\n\n<br /><br />";
	} else {
	    echo "The file $filename does not exist\n\n<br /><br />";
	}
		
	$handle = fopen($filename, "r");
	if (!$handle) {
		die("Failed! failed to open MySQL.inc file." .  __LINE__ . "\n");
		}
	else{
	    while (!feof($handle)) {
	        $buffer = fgets($handle, 4096);
	        if ($buffer{0}=="\t"){					// 

//	        	echo $buffer;
	        	$in_ary = explode ("=", $buffer);
	        	if( count($in_ary)==2) {
	
		        	switch (trim($in_ary[0])) {
					case "\$mysql_host":
					    $mysql_host =  str_replace ($searches, "",  trim($in_ary[1]));
					    echo  $mysql_host  . "\n";
					    break;
					case "\$mysql_db":
					    $mysql_db = str_replace ($searches, "",  trim($in_ary[1])) ;
					    echo  $mysql_db  . "\n";
					    break;
					case "\$mysql_user":
					    $mysql_user = str_replace ($searches, "",  trim($in_ary[1])) ;
					    echo  $mysql_user  . "\n";
					    break;
					case "\$mysql_passwd":
					    $mysql_passwd = str_replace ($searches, "",  trim($in_ary[1])) ;
					    echo  $mysql_passwd  . "\n";
					    break;
					case "\$mysql_prefix":
					    $mysql_prefix = str_replace ($searches, "",  trim($in_ary[1])) ;
					    echo  $mysql_prefix  . "\n";
					    break;
					default:
					    echo "error - error - error:" . $in_ary[0];
					}
		    	}
		    }
		}
	   fclose($handle);
	   }		// end if/else
	   
	if(empty($mysql_host)) 	{ die("Failed! Tickets 'host name' value absent from 'incs/mysql.inc.php' file. 	".  __LINE__ . "\n");}
	if(empty($mysql_db)) 	{ die("Failed! Tickets 'database name' value absent from 'incs/mysql.inc.php' file. " . __LINE__ . "\n");}
	if(empty($mysql_user)) 	{ die("Failed! Tickets 'database user name' value absent from 'incs/mysql.inc.php' file. " . __LINE__ . "\n");}

//	if (!@mysql_connect($_POST['frm_db_host'], $_POST['frm_db_user'], $_POST['frm_db_password'])) {
	if (!@mysql_connect ($mysql_host, $mysql_user, $mysql_passwd)) { die("Failed! Unable to connect to MySQL . ".  __LINE__ . "\n"); }	//	fixed missing close bracket
	   
	if (!(table_exists("settings",FALSE))) { die("Failed! Tickets 'Settings' table absent. ".  __LINE__ . "\n"); }

	if (!(table_exists("tracks_hh",FALSE))) { die("Failed! Tickets 'tracks_hh' table already installed. " .  __LINE__ . "\n"); }

	$the_version = get_variable("_version");
	$pos = strpos($the_version, $findme);
	if ($pos === false) {die( "Failed!  This upgrade applies only to Tickets Version 10. " .  __LINE__ . "\n");}
	
	die(" ---------------------------------------. " . __LINE__ . "\n");	
	if (!(get_variable("terrain"))) {
		do_insert_settings("terrain","1");		
		}
	if (!(table_exists("tracks_hh",FALSE))) {		// write tracks_hh table if not exist
		do_tracks_hh () ;
		}

	if (table_exists("session",TRUE)) {		// drop either way - no value
		do_session () ;
		}

//	write_conf($_POST['frm_db_host'],$_POST['frm_db_dbname'],$_POST['frm_db_user'],$_POST['frm_db_password'],$_POST['frm_db_prefix']);
	write_conf($mysql_host,$mysql_db,$mysql_user,$mysql_passwd,$mysql_prefix);

//	/* generated by 'install.php' Wed, 25 Feb 2009 08:13:55 -0600 */
//	$mysql_host 	= 'localhost';
//	$mysql_db 		= 'test_10_c';
////	$mysql_db 		= 'ari';
//	$mysql_user 	= 'root';
//	$mysql_passwd 	= '';
//	$mysql_prefix 	= '';

?>